<?php

/**
 * @file
 * Primary module hooks for CUA Theme Suggestions module.
 */

use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_theme().
 */
function cua_theme_suggestions_theme($existing, $type, $theme, $path)
{
      return [
        'views_view_fields__campuses' => [
          'variables' => [
            'term' => null,
            'view' => null,
          ],
        ],
        'views_view_fields__interests' => [
          'variables' => [
            'term' => null,
            'view' => null,
          ],
        ],
      ];
}

/**
 * Implements hook_theme_suggestions_HOOK().
 *
 * Add views field template suggestions.
 * Taken from https://drupal.stackexchange.com/questions/227709/adding-theme-suggestions-programmatically-for-views-rows-fields
 *
 * @inheritdoc
 */
function cua_theme_suggestions_theme_suggestions_views_view_fields(array $variables)
{
    return [
      'views_view_fields__' . $variables['view']->id(),
    ];
}

/**
 * Prepares variables for views fields templates.
 *
 * Default template: views-view-fields.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - view: The view object.
 *   - options: An array of options. Each option contains:
 *     - inline: An array that contains the fields that are to be
 *       displayed inline.
 *     - default_field_elements: If default field wrapper
 *       elements are to be provided.
 *     - hide_empty: Whether the field is to be hidden if empty.
 *     - element_default_classes: If the default classes are to be added.
 *     - separator: A string to be placed between inline fields to keep them
 *       visually distinct.
 *    - row: An array containing information about the current row.
 */
function template_preprocess_views_view_fields__campuses(&$variables)
{
    $term = Term::load($variables['row']->tid);
    $variables['term'] = $term;
}

/**
 * Prepares variables for views fields templates.
 *
 * Default template: views-view-fields.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - view: The view object.
 *   - options: An array of options. Each option contains:
 *     - inline: An array that contains the fields that are to be
 *       displayed inline.
 *     - default_field_elements: If default field wrapper
 *       elements are to be provided.
 *     - hide_empty: Whether the field is to be hidden if empty.
 *     - element_default_classes: If the default classes are to be added.
 *     - separator: A string to be placed between inline fields to keep them
 *       visually distinct.
 *    - row: An array containing information about the current row.
 */
function template_preprocess_views_view_fields__interests(&$variables)
{
    $term = Term::load($variables['row']->tid);
    $variables['term'] = $term;
}
